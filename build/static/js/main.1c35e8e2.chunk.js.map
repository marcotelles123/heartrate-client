{"version":3,"sources":["components/Button/Button.js","service/api.js","components/FormAdd/FormAdd.js","components/FormList/FormList.js","App.js","serviceWorker.js","index.js"],"names":["Button","styled","button","propTypes","disabled","PropTypes","bool","api","axios","create","baseURL","useStyles","makeStyles","theme","mainContainer","backgroundColor","minWidth","alignItems","padding","height","mainForm","margin","maxWidth","formControl","inputControl","FormAdd","React","useState","labelWidth","setLabelWidth","firstRate","setFirstRate","secondRate","setSecondRate","labelRef","useRef","classes","ShowToastError","message","toast","className","a","rateCommand","rates","console","log","JSON","stringify","post","res","useEffect","current","offsetWidth","id","variant","ref","htmlFor","value","onChange","event","target","type","onClick","createRate","then","response","status","catch","error","FormList","setRates","loadRates","get","data","ShowToastSuccess","e","delete","_id","table","map","dev","key","date","formattedDate","replace","formatDate","deleteRow","icon","faTrashAlt","style","rel","href","panes","menuItem","render","Pane","attached","TabExampleAttachedFalse","menu","overflowY","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c35e8e2.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = styled.button`\r\n    color: #FFF;\r\n    position: relative;\r\n    font-size: 16px;\r\n    padding: 10px;\r\n    min-width: 120px;\r\n    border-radius: 5px;\r\n    background-color: #594a95;\r\n    transition: background-color 0.3s ease, box-shadow 0.7s ease;\r\n    &:active {\r\n        top: 2px;\r\n    }\r\n    &:enabled:hover {\r\n        background-color: #FFF;\r\n        color: #594a95;\r\n        cursor: pointer;\r\n        box-shadow: 0px 0px 6px 2px rgba(79,156,239,0.3);\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n    } \r\n`\r\n\r\nButton.propTypes = {\r\n    disabled: PropTypes.bool\r\n}\r\n\r\nexport default Button;","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://127.0.0.1:3333/'\r\n});\r\n\r\nexport default api;","import React from 'react';\r\nimport './../../App.css';\r\nimport { makeStyles } from '@bit/mui-org.material-ui.styles'\r\nimport FormControl from '@bit/mui-org.material-ui.form-control'\r\nimport InputLabel from '@bit/mui-org.material-ui.input-label'\r\nimport OutlinedInput from '@bit/mui-org.material-ui.outlined-input'\r\nimport Button from './../Button/Button';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport api from './../../service/api';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    mainContainer: {\r\n        backgroundColor: '#594a95',\r\n        minWidth: '100%',\r\n        alignItems: 'center',\r\n        padding: '10px',\r\n        height: '100%'\r\n    },\r\n    mainForm: {\r\n        margin: 'auto',\r\n        backgroundColor: '#FFF',\r\n        maxWidth: '200px',\r\n        alignItems: 'center',\r\n        padding: '10px',\r\n        height: '100%'\r\n      },\r\n    \r\n      formControl: {\r\n        margin: '10px',\r\n        backgroundColor: '#FFF'\r\n      },\r\n      inputControl: {\r\n        height: '80px',\r\n      },\r\n}));\r\n\r\nfunction FormAdd() {\r\n    const [labelWidth, setLabelWidth] = React.useState(0);\r\n    const [firstRate, setFirstRate] = React.useState('');\r\n    const [secondRate, setSecondRate] = React.useState('');\r\n    const labelRef = React.useRef(null);\r\n    const classes = useStyles();\r\n\r\n    React.useEffect(() => {\r\n        setLabelWidth(labelRef.current.offsetWidth);\r\n    }, []);\r\n\r\n\r\n    const handleChangeFirstRate = event => {\r\n        setFirstRate(event.target.value);\r\n    };\r\n\r\n    const handleChangeSecondRate = event => {\r\n        setSecondRate(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        createRate()\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    ShowToastSuccess(\"Salvo com sucesso!!!\");\r\n                } else {\r\n                    ShowToastError(\"ERRO!\")\r\n                    console.log(response);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                ShowToastError(\"ERRO!\")\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    function ShowToastSuccess(message) {\r\n        toast(message);\r\n    }\r\n\r\n    function ShowToastError(message) {\r\n        toast(message, {\r\n            className: 'Error-Toast'\r\n        });\r\n    }\r\n\r\n    async function createRate() {\r\n        var rateCommand = {\r\n            rates: [\r\n                firstRate, secondRate\r\n            ]\r\n        };\r\n        console.log(JSON.stringify(rateCommand));\r\n        var res = await api.post('/rates/', rateCommand);\r\n        return await res;\r\n    }\r\n\r\n    return (\r\n        <div id=\"formAdd\" className={classes.mainForm}>\r\n            <FormControl className={classes.formControl} variant=\"outlined\">\r\n                <InputLabel ref={labelRef} htmlFor=\"component-outlined\">\r\n                    Press찾o Sist처lica\r\n          </InputLabel>\r\n                <OutlinedInput\r\n                    className={classes.inputControl}\r\n                    id=\"component-outlined\"\r\n                    value={firstRate}\r\n                    onChange={handleChangeFirstRate}\r\n                    labelWidth={labelWidth}\r\n                    type=\"number\"\r\n                />\r\n            </FormControl>\r\n            <FormControl className={classes.formControl} variant=\"outlined\">\r\n                <InputLabel ref={labelRef} htmlFor=\"component-outlined\">\r\n                    Press찾o Diast처lica\r\n      </InputLabel>\r\n                <OutlinedInput\r\n                    className={classes.inputControl}\r\n                    id=\"component-outlined\"\r\n                    value={secondRate}\r\n                    onChange={handleChangeSecondRate}\r\n                    labelWidth={labelWidth}\r\n                />\r\n            </FormControl>\r\n            <ToastContainer />\r\n            <Button onClick={handleSubmit}>Salvar</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormAdd;","import React, { useState, useEffect } from 'react';\r\nimport api from './../../service/api';\r\nimport './styles.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\n\r\nfunction FormList() {\r\n    const [rates, setRates] = useState([]);\r\n    //const classes = useStyles();\r\n\r\n    async function loadRates() {\r\n        const response = await api.get('/rates');\r\n        setRates(response.data);\r\n    }\r\n    useEffect(() => {\r\n\r\n        loadRates();\r\n    }, []);\r\n\r\n    function ShowToastSuccess(message) {\r\n        toast(message);\r\n    }\r\n\r\n    function ShowToastError(message) {\r\n        toast(message, {\r\n            className: 'Error-Toast'\r\n        });\r\n    }\r\n\r\n\r\n    async function deleteRow(e) {\r\n        await api.delete(`/rates/${e._id}`).then(response => {\r\n            if (response.status === 200) {\r\n                ShowToastSuccess(\"Deletado com sucesso!!!\");\r\n                loadRates();\r\n            } else {\r\n                ShowToastError(\"ERRO!\")\r\n                console.log(response);\r\n            }\r\n        }).catch(error => {\r\n            ShowToastError(\"ERRO!\")\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    function formatDate(date) {\r\n        debugger;\r\n        var formattedDate = date.replace(\"T\", \" \");\r\n        formattedDate = formattedDate.replace(\"Z\", \" \");\r\n\r\n        return formattedDate;\r\n    }\r\n\r\n    var table = <table className=\"ui celled table\">\r\n        <thead className=\"\">\r\n            <tr className=\"\">\r\n                <th className=\"\">Press찾o Sist처lica</th>\r\n                <th className=\"\">Press찾o Diaist처lica</th>\r\n                <th className=\"\">Data</th>\r\n                <th className=\"columnButton\"> </th>\r\n            </tr>\r\n        </thead>\r\n        {rates.map(dev => {\r\n            return <tbody className=\"\" key={dev._id}>\r\n                <tr key={dev._id} className={dev.rates[0] > 12 || dev.rates[1] > 8 ? \"highPressure\" : \"\"}>\r\n                    <td className=\"\">{dev.rates[0]}</td>\r\n                    <td className=\"\">{dev.rates[1]}</td>\r\n                    <td className=\"\">{formatDate(dev.date)}</td>\r\n                    <td className=\"columnButton\" onClick={() => deleteRow(dev)}>\r\n                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        }\r\n\r\n        )}\r\n    </table>\r\n    return (\r\n        <div id=\"formList\">\r\n            {table}\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormList;","import React from 'react';\nimport './App.css';\nimport { makeStyles } from '@bit/mui-org.material-ui.styles'\nimport \"react-toastify/dist/ReactToastify.css\";\nimport FormAdd from './components/FormAdd/FormAdd';\nimport FormList from './components/FormList/FormList';\nimport Tab from '@bit/semantic-org.semantic-ui-react.tab'\n\nconst style = <link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css' />\n\n\nconst panes = [\n  {\n    menuItem: \"Cadastrar Press찾o\",\n    className: \"NavBarStyle\",\n    render: () => <Tab.Pane attached={false}><FormAdd /></Tab.Pane>\n  },\n  {\n    menuItem: \"Hist처rico\",\n    className: \"NavBarStyle\",\n    render: () => <Tab.Pane attached={false}><FormList /></Tab.Pane>\n  }\n];\n\nconst TabExampleAttachedFalse = () => <Tab menu={{ attached: false }} className=\"NavBarStyle\" panes={panes} />\n\nconst useStyles = makeStyles(theme => ({\n  mainContainer: {\n    backgroundColor: '#594a95',\n    minWidth: '100%',\n    alignItems: 'center',\n    padding: '10px',\n    height: '100%',\n    overflowY: 'scroll'\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <div id=\"mainContainer\" className={classes.mainContainer}>\n        <div id=\"mainContainer\">\n          {style}<TabExampleAttachedFalse className={classes.mainContainer} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}